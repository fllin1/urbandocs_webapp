(()=>{"use strict";var e,t,o,r,n,i={9080:(e,t,o)=>{var r=o(9251);const n={5:"https://buy.stripe.com/fZu6oJ2R9fAp6GN0ms9Zm07",10:"https://buy.stripe.com/4gM28t4Zhcod5CJ2uA9Zm06",15:"https://buy.stripe.com/8x2fZj0J14VLe9fc5a9Zm03",20:"https://buy.stripe.com/bJe9AV77pcod6GN3yE9Zm05",30:"https://buy.stripe.com/7sY9AV9fx9c10ip1qw9Zm02",50:"https://buy.stripe.com/6oU7sN0J1fAp7KR0ms9Zm04",100:"https://buy.stripe.com/aFa7sN77p0Fv7KR2uA9Zm01"};function i(e){const t=document.getElementById("donateBtn");t&&e>0?(t.disabled=!1,t.innerHTML=`Faire un don de&nbsp;<span id="selectedAmount">${e}</span>€`):t&&(t.disabled=!0,t.innerHTML='Faire un don de&nbsp;<span id="selectedAmount">0</span>€')}function s(e,t="info"){document.querySelectorAll(".notification").forEach((e=>e.remove()));const o=document.createElement("div");return o.className=`notification notification-${t}`,o.textContent=e,Object.assign(o.style,{position:"fixed",top:"20px",right:"20px",padding:"15px 20px",borderRadius:"8px",color:"white",fontWeight:"500",zIndex:"10000",maxWidth:"400px",boxShadow:"0 4px 12px rgba(0, 0, 0, 0.15)",backgroundColor:"success"===t?"#10b981":"error"===t?"#ef4444":"warning"===t?"#f59e0b":"#3b82f6"}),document.body.appendChild(o),setTimeout((()=>{o.parentNode&&o.remove()}),5e3),o}document.addEventListener("DOMContentLoaded",(()=>{try{(0,r.Mt)(),!function(){try{if(!function(){const e=document.querySelectorAll(".amount-btn"),t=document.getElementById("customAmount"),o=document.getElementById("donateBtn");if(!e.length||!t||!o)return console.error("Required donation form elements not found"),!1;let r=5;return i(r),e.forEach((o=>{o.addEventListener("click",(()=>{e.forEach((e=>e.classList.remove("selected"))),o.classList.add("selected"),r=parseInt(o.dataset.amount),i(r),t.value=""}))})),t.addEventListener("input",(t=>{const o=parseInt(t.target.value);if(o&&o>0)e.forEach((e=>e.classList.remove("selected"))),r=o,i(r);else if(!t.target.value){const e=document.querySelector('.amount-btn[data-amount="5"]');e&&(e.classList.add("selected"),r=5,i(r))}})),o.addEventListener("click",(()=>{r>0&&function(e){const t=document.getElementById("donateBtn"),o=t.innerHTML;t.disabled=!0,t.innerHTML="Ouverture du paiement...";try{if(n[e]){const r=window.open(n[e],"stripe-checkout","width=600,height=600,scrollbars=yes,resizable=yes");return setTimeout((()=>{t.disabled=!1,t.innerHTML=o}),1e3),void(r&&r.focus())}const r=window.open("https://buy.stripe.com/6oUfZj77pgEtfdjb169Zm00","stripe-checkout","width=600,height=600,scrollbars=yes,resizable=yes");setTimeout((()=>{t.disabled=!1,t.innerHTML=o}),1e3),r&&r.focus(),s(`Vous pourrez ajuster le montant (${e}€) sur la page de paiement Stripe.`,"info")}catch(e){console.error("Error processing donation:",e),s("Erreur lors du traitement du don.","error"),t.disabled=!1,t.innerHTML=o}}(r)})),console.log("Donation system setup complete"),!0}())throw new Error("Failed to setup donation system");return console.log("Donation system initialized successfully"),s("Stripe initialisé","success"),!0}catch(e){return console.error("Error initializing donation system:",e),s("Erreur d'initialisation du système de paiement","error"),!1}}()?console.error("Failed to initialize donation system"):console.log("Donation page initialized successfully")}catch(e){console.error("Error initializing donation page:",e)}}))}},s={};function a(e){var t=s[e];if(void 0!==t)return t.exports;var o=s[e]={exports:{}};return i[e].call(o.exports,o,o.exports,a),o.exports}a.m=i,e=[],a.O=(t,o,r,n)=>{if(!o){var i=1/0;for(u=0;u<e.length;u++){for(var[o,r,n]=e[u],s=!0,c=0;c<o.length;c++)(!1&n||i>=n)&&Object.keys(a.O).every((e=>a.O[e](o[c])))?o.splice(c--,1):(s=!1,n<i&&(i=n));if(s){e.splice(u--,1);var d=r();void 0!==d&&(t=d)}}return t}n=n||0;for(var u=e.length;u>0&&e[u-1][2]>n;u--)e[u]=e[u-1];e[u]=[o,r,n]},o=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__,a.t=function(e,r){if(1&r&&(e=this(e)),8&r)return e;if("object"==typeof e&&e){if(4&r&&e.__esModule)return e;if(16&r&&"function"==typeof e.then)return e}var n=Object.create(null);a.r(n);var i={};t=t||[null,o({}),o([]),o(o)];for(var s=2&r&&e;"object"==typeof s&&!~t.indexOf(s);s=o(s))Object.getOwnPropertyNames(s).forEach((t=>i[t]=()=>e[t]));return i.default=()=>e,a.d(n,i),n},a.d=(e,t)=>{for(var o in t)a.o(t,o)&&!a.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},a.f={},a.e=e=>Promise.all(Object.keys(a.f).reduce(((t,o)=>(a.f[o](e,t),t)),[])),a.u=e=>"js/"+e+".chunk.js",a.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r={},n="urbandocs_webapp:",a.l=(e,t,o,i)=>{if(r[e])r[e].push(t);else{var s,c;if(void 0!==o)for(var d=document.getElementsByTagName("script"),u=0;u<d.length;u++){var l=d[u];if(l.getAttribute("src")==e||l.getAttribute("data-webpack")==n+o){s=l;break}}s||(c=!0,(s=document.createElement("script")).charset="utf-8",s.timeout=120,a.nc&&s.setAttribute("nonce",a.nc),s.setAttribute("data-webpack",n+o),s.src=e),r[e]=[t];var p=(t,o)=>{s.onerror=s.onload=null,clearTimeout(f);var n=r[e];if(delete r[e],s.parentNode&&s.parentNode.removeChild(s),n&&n.forEach((e=>e(o))),t)return t(o)},f=setTimeout(p.bind(null,void 0,{type:"timeout",target:s}),12e4);s.onerror=p.bind(null,s.onerror),s.onload=p.bind(null,s.onload),c&&document.head.appendChild(s)}},a.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.j=357,a.p="/",(()=>{var e={357:0};a.f.j=(t,o)=>{var r=a.o(e,t)?e[t]:void 0;if(0!==r)if(r)o.push(r[2]);else{var n=new Promise(((o,n)=>r=e[t]=[o,n]));o.push(r[2]=n);var i=a.p+a.u(t),s=new Error;a.l(i,(o=>{if(a.o(e,t)&&(0!==(r=e[t])&&(e[t]=void 0),r)){var n=o&&("load"===o.type?"missing":o.type),i=o&&o.target&&o.target.src;s.message="Loading chunk "+t+" failed.\n("+n+": "+i+")",s.name="ChunkLoadError",s.type=n,s.request=i,r[1](s)}}),"chunk-"+t,t)}},a.O.j=t=>0===e[t];var t=(t,o)=>{var r,n,[i,s,c]=o,d=0;if(i.some((t=>0!==e[t]))){for(r in s)a.o(s,r)&&(a.m[r]=s[r]);if(c)var u=c(a)}for(t&&t(o);d<i.length;d++)n=i[d],a.o(e,n)&&e[n]&&e[n][0](),e[n]=0;return a.O(u)},o=self.webpackChunkurbandocs_webapp=self.webpackChunkurbandocs_webapp||[];o.forEach(t.bind(null,0)),o.push=t.bind(null,o.push.bind(o))})();var c=a.O(void 0,[76],(()=>a(9080)));c=a.O(c)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,