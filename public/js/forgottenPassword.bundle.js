(()=>{"use strict";var e,t,r,n,o,a={4694:(e,t,r)=>{var n=r(9660),o=r(3715);let a=null;window.onloadTurnstileResetCallback=function(){turnstile.render("#turnstile-reset-container",{sitekey:"0x4AAAAAABdzY3InOU2_In99",callback:function(e){a=e}})},document.addEventListener("DOMContentLoaded",(()=>{(function(){const e=document.getElementById("resetForm"),t=document.getElementById("errorMessage"),r=document.getElementById("statusMessage");e&&e.addEventListener("submit",(async i=>{i.preventDefault(),t&&(t.classList.add("hidden"),t.textContent=""),r&&(r.classList.add("hidden"),r.textContent="");const s=document.getElementById("email").value.trim();if(s)if(a){(0,o.Cs)("resetBtn","resetSpinner");try{const{error:t}=await n.N.auth.resetPasswordForEmail(s,{redirectTo:`${window.location.origin}/update-password`,captchaToken:a});if(t)throw t;(0,o.wc)("Si un compte existe avec cet email, vous recevrez un lien de réinitialisation.","success"),e.classList.add("hidden")}catch(e){console.error("Password reset error:",e),(0,o.Qg)("Une erreur est survenue. Veuillez réessayer plus tard."),turnstile.reset(),a=null}finally{(0,o.RZ)("resetBtn","resetSpinner")}}else(0,o.Qg)("Veuillez compléter la vérification Turnstile.");else(0,o.Qg)("Veuillez entrer votre adresse email.")}))})(),console.log("Forgot password page initialized")}))}},i={};function s(e){var t=i[e];if(void 0!==t)return t.exports;var r=i[e]={exports:{}};return a[e].call(r.exports,r,r.exports,s),r.exports}s.m=a,e=[],s.O=(t,r,n,o)=>{if(!r){var a=1/0;for(d=0;d<e.length;d++){for(var[r,n,o]=e[d],i=!0,l=0;l<r.length;l++)(!1&o||a>=o)&&Object.keys(s.O).every((e=>s.O[e](r[l])))?r.splice(l--,1):(i=!1,o<a&&(a=o));if(i){e.splice(d--,1);var u=n();void 0!==u&&(t=u)}}return t}o=o||0;for(var d=e.length;d>0&&e[d-1][2]>o;d--)e[d]=e[d-1];e[d]=[r,n,o]},r=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__,s.t=function(e,n){if(1&n&&(e=this(e)),8&n)return e;if("object"==typeof e&&e){if(4&n&&e.__esModule)return e;if(16&n&&"function"==typeof e.then)return e}var o=Object.create(null);s.r(o);var a={};t=t||[null,r({}),r([]),r(r)];for(var i=2&n&&e;"object"==typeof i&&!~t.indexOf(i);i=r(i))Object.getOwnPropertyNames(i).forEach((t=>a[t]=()=>e[t]));return a.default=()=>e,s.d(o,a),o},s.d=(e,t)=>{for(var r in t)s.o(t,r)&&!s.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},s.f={},s.e=e=>Promise.all(Object.keys(s.f).reduce(((t,r)=>(s.f[r](e,t),t)),[])),s.u=e=>"js/"+e+".chunk.js",s.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),s.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n={},o="urbandocs_webapp:",s.l=(e,t,r,a)=>{if(n[e])n[e].push(t);else{var i,l;if(void 0!==r)for(var u=document.getElementsByTagName("script"),d=0;d<u.length;d++){var c=u[d];if(c.getAttribute("src")==e||c.getAttribute("data-webpack")==o+r){i=c;break}}i||(l=!0,(i=document.createElement("script")).charset="utf-8",i.timeout=120,s.nc&&i.setAttribute("nonce",s.nc),i.setAttribute("data-webpack",o+r),i.src=e),n[e]=[t];var f=(t,r)=>{i.onerror=i.onload=null,clearTimeout(p);var o=n[e];if(delete n[e],i.parentNode&&i.parentNode.removeChild(i),o&&o.forEach((e=>e(r))),t)return t(r)},p=setTimeout(f.bind(null,void 0,{type:"timeout",target:i}),12e4);i.onerror=f.bind(null,i.onerror),i.onload=f.bind(null,i.onload),l&&document.head.appendChild(i)}},s.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.j=168,s.p="/",(()=>{var e={168:0};s.f.j=(t,r)=>{var n=s.o(e,t)?e[t]:void 0;if(0!==n)if(n)r.push(n[2]);else{var o=new Promise(((r,o)=>n=e[t]=[r,o]));r.push(n[2]=o);var a=s.p+s.u(t),i=new Error;s.l(a,(r=>{if(s.o(e,t)&&(0!==(n=e[t])&&(e[t]=void 0),n)){var o=r&&("load"===r.type?"missing":r.type),a=r&&r.target&&r.target.src;i.message="Loading chunk "+t+" failed.\n("+o+": "+a+")",i.name="ChunkLoadError",i.type=o,i.request=a,n[1](i)}}),"chunk-"+t,t)}},s.O.j=t=>0===e[t];var t=(t,r)=>{var n,o,[a,i,l]=r,u=0;if(a.some((t=>0!==e[t]))){for(n in i)s.o(i,n)&&(s.m[n]=i[n]);if(l)var d=l(s)}for(t&&t(r);u<a.length;u++)o=a[u],s.o(e,o)&&e[o]&&e[o][0](),e[o]=0;return s.O(d)},r=self.webpackChunkurbandocs_webapp=self.webpackChunkurbandocs_webapp||[];r.forEach(t.bind(null,0)),r.push=t.bind(null,r.push.bind(r))})();var l=s.O(void 0,[76],(()=>s(4694)));l=s.O(l)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,